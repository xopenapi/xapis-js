/* tslint:disable */
/* eslint-disable */
/**
 * xapi services
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface VideoInfo
 */
export interface VideoInfo {
    /**
     * 视频时长（秒）
     * @type {number}
     * @memberof VideoInfo
     */
    duration: number;
    /**
     * 视频宽度（像素）
     * @type {number}
     * @memberof VideoInfo
     */
    width: number;
    /**
     * 视频高度（像素）
     * @type {number}
     * @memberof VideoInfo
     */
    height: number;
    /**
     * 视频大小（字节）
     * @type {number}
     * @memberof VideoInfo
     */
    size: number;
    /**
     * 视频格式
     * @type {string}
     * @memberof VideoInfo
     */
    format?: string;
}

/**
 * Check if a given object implements the VideoInfo interface.
 */
export function instanceOfVideoInfo(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "duration" in value;
    isInstance = isInstance && "width" in value;
    isInstance = isInstance && "height" in value;
    isInstance = isInstance && "size" in value;

    return isInstance;
}

export function VideoInfoFromJSON(json: any): VideoInfo {
    return VideoInfoFromJSONTyped(json, false);
}

export function VideoInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): VideoInfo {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'duration': json['duration'],
        'width': json['width'],
        'height': json['height'],
        'size': json['size'],
        'format': !exists(json, 'format') ? undefined : json['format'],
    };
}

export function VideoInfoToJSON(value?: VideoInfo | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'duration': value.duration,
        'width': value.width,
        'height': value.height,
        'size': value.size,
        'format': value.format,
    };
}

