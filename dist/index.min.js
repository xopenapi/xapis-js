"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var coreClient=require("@azure/core-client"),coreRestPipeline=require("@azure/core-rest-pipeline");function _interopNamespace(a){var t;return a&&a.__esModule?a:(t=Object.create(null),a&&Object.keys(a).forEach(function(e){var r;"default"!==e&&(r=Object.getOwnPropertyDescriptor(a,e),Object.defineProperty(t,e,r.get?r:{enumerable:!0,get:function(){return a[e]}}))}),t.default=a,Object.freeze(t))}var coreClient__namespace=_interopNamespace(coreClient),coreRestPipeline__namespace=_interopNamespace(coreRestPipeline);exports.KnownStorageProvider=void 0,function(e){e.Qcloud="qcloud",e.Aliyun="aliyun"}(exports.KnownStorageProvider||(exports.KnownStorageProvider={}));const Config={type:{name:"Composite",className:"Config",modelProperties:{id:{serializedName:"id",required:!0,type:{name:"String"}},resourceId:{serializedName:"resource_id",required:!0,type:{name:"String"}},groupId:{serializedName:"group_id",type:{name:"String"}},templateId:{serializedName:"template_id",type:{name:"String"}},key:{serializedName:"key",required:!0,type:{name:"String"}},value:{serializedName:"value",required:!0,type:{name:"Dictionary",value:{type:{name:"any"}}}},createdAt:{serializedName:"created_at",required:!0,type:{name:"DateTime"}},updatedAt:{serializedName:"updated_at",type:{name:"DateTime"}}}}},ErrorModel={type:{name:"Composite",className:"ErrorModel",modelProperties:{code:{serializedName:"code",required:!0,type:{name:"String"}},message:{serializedName:"message",type:{name:"String"}},param:{serializedName:"param",type:{name:"String"}}}}},CreateConfig={type:{name:"Composite",className:"CreateConfig",modelProperties:{resourceId:{serializedName:"resource_id",required:!0,type:{name:"String"}},groupId:{serializedName:"group_id",type:{name:"String"}},templateId:{serializedName:"template_id",type:{name:"String"}},key:{serializedName:"key",required:!0,type:{name:"String"}},value:{serializedName:"value",required:!0,type:{name:"Dictionary",value:{type:{name:"any"}}}}}}},UpdateConfig={type:{name:"Composite",className:"UpdateConfig",modelProperties:{resourceId:{serializedName:"resource_id",type:{name:"String"}},groupId:{serializedName:"group_id",type:{name:"String"}},templateId:{serializedName:"template_id",type:{name:"String"}},key:{serializedName:"key",type:{name:"String"}},value:{serializedName:"value",type:{name:"Dictionary",value:{type:{name:"any"}}}}}}},ConfigTemplate={type:{name:"Composite",className:"ConfigTemplate",modelProperties:{id:{serializedName:"id",required:!0,type:{name:"String"}},groupId:{serializedName:"group_id",type:{name:"String"}},key:{serializedName:"key",required:!0,type:{name:"String"}},value:{serializedName:"value",required:!0,type:{name:"Dictionary",value:{type:{name:"any"}}}},createdAt:{serializedName:"created_at",required:!0,type:{name:"DateTime"}},updatedAt:{serializedName:"updated_at",type:{name:"DateTime"}}}}},CreateConfigTemplate={type:{name:"Composite",className:"CreateConfigTemplate",modelProperties:{groupId:{serializedName:"group_id",type:{name:"String"}},key:{serializedName:"key",required:!0,type:{name:"String"}},value:{serializedName:"value",required:!0,type:{name:"Dictionary",value:{type:{name:"any"}}}}}}},UpdateConfigTemplate={type:{name:"Composite",className:"UpdateConfigTemplate",modelProperties:{groupId:{serializedName:"group_id",type:{name:"String"}},key:{serializedName:"key",type:{name:"String"}},value:{serializedName:"value",type:{name:"Dictionary",value:{type:{name:"any"}}}}}}},CreateConfigGroup={type:{name:"Composite",className:"CreateConfigGroup",modelProperties:{name:{serializedName:"name",required:!0,type:{name:"String"}}}}},ConfigGroup={type:{name:"Composite",className:"ConfigGroup",modelProperties:{id:{serializedName:"id",required:!0,type:{name:"String"}},name:{serializedName:"name",required:!0,type:{name:"String"}},createdAt:{serializedName:"created_at",required:!0,type:{name:"DateTime"}},updatedAt:{serializedName:"updated_at",type:{name:"DateTime"}}}}},UpdateConfigGroup={type:{name:"Composite",className:"UpdateConfigGroup",modelProperties:{name:{serializedName:"name",type:{name:"String"}}}}},StorageTemporaryCredentials={type:{name:"Composite",className:"StorageTemporaryCredentials",modelProperties:{provider:{serializedName:"provider",required:!0,type:{name:"String"}},bucket:{serializedName:"bucket",required:!0,type:{name:"String"}},region:{serializedName:"region",required:!0,type:{name:"String"}},cdn:{serializedName:"cdn",type:{name:"String"}},url:{serializedName:"url",type:{name:"String"}},credentials:{serializedName:"credentials",required:!0,type:{name:"Dictionary",value:{type:{name:"any"}}}}}}};var Mappers=Object.freeze({__proto__:null,Config:Config,ErrorModel:ErrorModel,CreateConfig:CreateConfig,UpdateConfig:UpdateConfig,ConfigTemplate:ConfigTemplate,CreateConfigTemplate:CreateConfigTemplate,UpdateConfigTemplate:UpdateConfigTemplate,CreateConfigGroup:CreateConfigGroup,ConfigGroup:ConfigGroup,UpdateConfigGroup:UpdateConfigGroup,StorageTemporaryCredentials:StorageTemporaryCredentials});const accept={parameterPath:"accept",mapper:{defaultValue:"application/json",isConstant:!0,serializedName:"Accept",type:{name:"String"}}},$host={parameterPath:"$host",mapper:{serializedName:"$host",required:!0,type:{name:"String"}},skipEncoding:!0},resourceId={parameterPath:"resourceId",mapper:{serializedName:"resource_id",required:!0,type:{name:"String"}}},key={parameterPath:"key",mapper:{serializedName:"key",required:!0,type:{name:"String"}}},contentType={parameterPath:["options","contentType"],mapper:{defaultValue:"application/json",isConstant:!0,serializedName:"Content-Type",type:{name:"String"}}},body={parameterPath:["options","body"],mapper:CreateConfig},id={parameterPath:"id",mapper:{serializedName:"id",required:!0,type:{name:"String"}}},body1={parameterPath:["options","body"],mapper:UpdateConfig},body2={parameterPath:["options","body"],mapper:CreateConfigTemplate},body3={parameterPath:["options","body"],mapper:UpdateConfigTemplate},body4={parameterPath:["options","body"],mapper:CreateConfigGroup},body5={parameterPath:["options","body"],mapper:UpdateConfigGroup},provider={parameterPath:["options","provider"],mapper:{serializedName:"provider",type:{name:"String"}}},path={parameterPath:["options","path"],mapper:{serializedName:"path",type:{name:"String"}}};class XapiService extends coreClient__namespace.ServiceClient{constructor(e,r){if(void 0===e)throw new Error("'credentials' cannot be null");var a,t="azsdk-js-xapis/0.0.3",t=(r=r||{}).userAgentOptions&&r.userAgentOptions.userAgentPrefix?r.userAgentOptions.userAgentPrefix+" "+t:t,t=Object.assign(Object.assign(Object.assign({},{requestContentType:"application/json; charset=utf-8",credential:e}),r),{userAgentOptions:{userAgentPrefix:t},baseUri:null!=(t=null!=(t=r.endpoint)?t:r.baseUri)?t:"https://api.growingbox.cn"});super(t);let i=!1;null!=r&&r.pipeline&&0<r.pipeline.getOrderedPolicies().length&&(a=r.pipeline.getOrderedPolicies(),i=a.some(e=>e.name===coreRestPipeline__namespace.bearerTokenAuthenticationPolicyName)),r&&r.pipeline&&0!=r.pipeline.getOrderedPolicies().length&&i||(this.pipeline.removePolicy({name:coreRestPipeline__namespace.bearerTokenAuthenticationPolicyName}),this.pipeline.addPolicy(coreRestPipeline__namespace.bearerTokenAuthenticationPolicy({credential:e,scopes:""+t.credentialScopes,challengeCallbacks:{authorizeRequestOnChallenge:coreClient__namespace.authorizeRequestOnClaimChallenge}}))),this.$host=r.$host||"https://api.growingbox.cn"}getConfigByKey(e,r,a){return this.sendOperationRequest({resourceId:e,key:r,options:a},getConfigByKeyOperationSpec)}createConfig(e){return this.sendOperationRequest({options:e},createConfigOperationSpec)}getConfig(e,r){return this.sendOperationRequest({id:e,options:r},getConfigOperationSpec)}updateConfig(e,r){return this.sendOperationRequest({id:e,options:r},updateConfigOperationSpec)}deleteConfig(e,r){return this.sendOperationRequest({id:e,options:r},deleteConfigOperationSpec)}getConfigTemplateByKey(e,r){return this.sendOperationRequest({key:e,options:r},getConfigTemplateByKeyOperationSpec)}createConfigTemplate(e){return this.sendOperationRequest({options:e},createConfigTemplateOperationSpec)}getConfigTemplate(e,r){return this.sendOperationRequest({id:e,options:r},getConfigTemplateOperationSpec)}updateConfigTemplate(e,r){return this.sendOperationRequest({id:e,options:r},updateConfigTemplateOperationSpec)}deleteConfigTemplate(e,r){return this.sendOperationRequest({id:e,options:r},deleteConfigTemplateOperationSpec)}createConfigGroup(e){return this.sendOperationRequest({options:e},createConfigGroupOperationSpec)}getConfigGroup(e,r){return this.sendOperationRequest({id:e,options:r},getConfigGroupOperationSpec)}updateConfigGroup(e,r){return this.sendOperationRequest({id:e,options:r},updateConfigGroupOperationSpec)}deleteConfigGroup(e,r){return this.sendOperationRequest({id:e,options:r},deleteConfigGroupOperationSpec)}getStorageTemporaryCredentials(e){return this.sendOperationRequest({options:e},getStorageTemporaryCredentialsOperationSpec)}}const serializer=coreClient__namespace.createSerializer(Mappers,!1),getConfigByKeyOperationSpec={path:"/config/v1/configs",httpMethod:"GET",responses:{200:{bodyMapper:Config},default:{bodyMapper:ErrorModel}},queryParameters:[resourceId,key],urlParameters:[$host],headerParameters:[accept],serializer:serializer},createConfigOperationSpec={path:"/config/v1/configs",httpMethod:"POST",responses:{200:{bodyMapper:Config},default:{bodyMapper:ErrorModel}},requestBody:body,urlParameters:[$host],headerParameters:[accept,contentType],mediaType:"json",serializer:serializer},getConfigOperationSpec={path:"/config/v1/configs/{id}",httpMethod:"GET",responses:{200:{bodyMapper:Config},default:{bodyMapper:ErrorModel}},urlParameters:[$host,id],headerParameters:[accept],serializer:serializer},updateConfigOperationSpec={path:"/config/v1/configs/{id}",httpMethod:"PATCH",responses:{200:{bodyMapper:Config},default:{bodyMapper:ErrorModel}},requestBody:body1,urlParameters:[$host,id],headerParameters:[accept,contentType],mediaType:"json",serializer:serializer},deleteConfigOperationSpec={path:"/config/v1/configs/{id}",httpMethod:"DELETE",responses:{200:{},default:{bodyMapper:ErrorModel}},urlParameters:[$host,id],headerParameters:[accept],serializer:serializer},getConfigTemplateByKeyOperationSpec={path:"/config/v1/config_templates",httpMethod:"GET",responses:{200:{bodyMapper:ConfigTemplate},default:{bodyMapper:ErrorModel}},queryParameters:[key],urlParameters:[$host],headerParameters:[accept],serializer:serializer},createConfigTemplateOperationSpec={path:"/config/v1/config_templates",httpMethod:"POST",responses:{200:{bodyMapper:ConfigTemplate},default:{bodyMapper:ErrorModel}},requestBody:body2,urlParameters:[$host],headerParameters:[accept,contentType],mediaType:"json",serializer:serializer},getConfigTemplateOperationSpec={path:"/config/v1/config_templates/{id}",httpMethod:"GET",responses:{200:{bodyMapper:ConfigTemplate},default:{bodyMapper:ErrorModel}},urlParameters:[$host,id],headerParameters:[accept],serializer:serializer},updateConfigTemplateOperationSpec={path:"/config/v1/config_templates/{id}",httpMethod:"PATCH",responses:{200:{bodyMapper:ConfigTemplate},default:{bodyMapper:ErrorModel}},requestBody:body3,urlParameters:[$host,id],headerParameters:[accept,contentType],mediaType:"json",serializer:serializer},deleteConfigTemplateOperationSpec={path:"/config/v1/config_templates/{id}",httpMethod:"DELETE",responses:{200:{},default:{bodyMapper:ErrorModel}},urlParameters:[$host,id],headerParameters:[accept],serializer:serializer},createConfigGroupOperationSpec={path:"/config/v1/config_groups",httpMethod:"POST",responses:{200:{bodyMapper:ConfigGroup},default:{bodyMapper:ErrorModel}},requestBody:body4,urlParameters:[$host],headerParameters:[accept,contentType],mediaType:"json",serializer:serializer},getConfigGroupOperationSpec={path:"/config/v1/config_groups/{id}",httpMethod:"GET",responses:{200:{bodyMapper:ConfigGroup},default:{bodyMapper:ErrorModel}},urlParameters:[$host,id],headerParameters:[accept],serializer:serializer},updateConfigGroupOperationSpec={path:"/config/v1/config_groups/{id}",httpMethod:"PATCH",responses:{200:{bodyMapper:ConfigGroup},default:{bodyMapper:ErrorModel}},requestBody:body5,urlParameters:[$host,id],headerParameters:[accept,contentType],mediaType:"json",serializer:serializer},deleteConfigGroupOperationSpec={path:"/config/v1/config_groups/{id}",httpMethod:"DELETE",responses:{200:{},default:{bodyMapper:ErrorModel}},urlParameters:[$host,id],headerParameters:[accept],serializer:serializer},getStorageTemporaryCredentialsOperationSpec={path:"/storage/v1/temporary_credentials",httpMethod:"GET",responses:{200:{bodyMapper:StorageTemporaryCredentials},default:{bodyMapper:ErrorModel}},queryParameters:[provider,path],urlParameters:[$host],headerParameters:[accept],serializer:serializer};exports.XapiService=XapiService;