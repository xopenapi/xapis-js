{"version":3,"file":"index.js","sources":["../src/models/index.ts","../src/models/mappers.ts","../src/models/parameters.ts","../src/xapiService.ts"],"sourcesContent":["import * as coreClient from \"@azure/core-client\";\n\nexport interface Config {\n  /** 配置ID */\n  id: string;\n  /** 所属的资源ID */\n  resourceId: string;\n  /** 所属的配置组ID */\n  groupId?: string;\n  /** 配置模板ID */\n  templateId?: string;\n  /** 配置项 */\n  key: string;\n  /** 配置内容 */\n  value: Record<string, unknown>;\n  /** 创建时间 */\n  createdAt: Date;\n  /** 最后更新时间 */\n  updatedAt?: Date;\n}\n\nexport interface ErrorModel {\n  /** 错误码 */\n  code: string;\n  /** 错误消息 */\n  message?: string;\n  /** 发生错误的字段 */\n  param?: string;\n}\n\nexport interface CreateConfig {\n  /** 所属的资源ID */\n  resourceId: string;\n  /** 所属的配置组ID */\n  groupId?: string;\n  /** 配置模板ID */\n  templateId?: string;\n  /** 配置项 */\n  key: string;\n  /** 配置内容 */\n  value: Record<string, unknown>;\n}\n\nexport interface UpdateConfig {\n  /** 所属的资源ID */\n  resourceId?: string;\n  /** 所属的配置组ID */\n  groupId?: string;\n  /** 配置模板ID */\n  templateId?: string;\n  /** 配置项 */\n  key?: string;\n  /** 配置内容 */\n  value?: Record<string, unknown>;\n}\n\nexport interface ConfigTemplate {\n  /** 配置模板ID */\n  id: string;\n  /** 所属的配置组ID */\n  groupId?: string;\n  /** 配置项 */\n  key: string;\n  /** 配置内容 */\n  value: Record<string, unknown>;\n  /** 创建时间 */\n  createdAt: Date;\n  /** 最后更新时间 */\n  updatedAt?: Date;\n}\n\nexport interface CreateConfigTemplate {\n  /** 所属的配置组ID */\n  groupId?: string;\n  /** 配置项 */\n  key: string;\n  /** 配置内容 */\n  value: Record<string, unknown>;\n}\n\nexport interface UpdateConfigTemplate {\n  /** 所属的配置组ID */\n  groupId?: string;\n  /** 配置项 */\n  key?: string;\n  /** 配置内容 */\n  value?: Record<string, unknown>;\n}\n\nexport interface CreateConfigGroup {\n  /** 配置组名称 */\n  name: string;\n}\n\nexport interface ConfigGroup {\n  /** 配置组ID */\n  id: string;\n  /** 配置组名称 */\n  name: string;\n  /** 创建时间 */\n  createdAt: Date;\n  /** 最后更新时间 */\n  updatedAt?: Date;\n}\n\nexport interface UpdateConfigGroup {\n  /** 配置组名称 */\n  name?: string;\n}\n\nexport interface StorageTemporaryCredentials {\n  /** 使用的云存储平台 */\n  provider: StorageProvider;\n  /** 存储桶 */\n  bucket: string;\n  /** 地区 */\n  region: string;\n  /** 存储对应的CDN地址 */\n  cdn?: string;\n  /** 上传路径对应的CDN地址 */\n  url?: string;\n  /** 存储平台的临时上传凭证参数 */\n  credentials: Record<string, unknown>;\n}\n\n/** Known values of {@link StorageProvider} that the service accepts. */\nexport enum KnownStorageProvider {\n  /** Qcloud */\n  Qcloud = \"qcloud\",\n  /** Aliyun */\n  Aliyun = \"aliyun\"\n}\n\n/**\n * Defines values for StorageProvider. \\\n * {@link KnownStorageProvider} can be used interchangeably with StorageProvider,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **qcloud** \\\n * **aliyun**\n */\nexport type StorageProvider = string;\n\n/** Optional parameters. */\nexport interface GetConfigByKeyOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getConfigByKey operation. */\nexport type GetConfigByKeyResponse = Config;\n\n/** Optional parameters. */\nexport interface CreateConfigOptionalParams\n  extends coreClient.OperationOptions {\n  body?: CreateConfig;\n}\n\n/** Contains response data for the createConfig operation. */\nexport type CreateConfigResponse = Config;\n\n/** Optional parameters. */\nexport interface GetConfigOptionalParams extends coreClient.OperationOptions {}\n\n/** Contains response data for the getConfig operation. */\nexport type GetConfigResponse = Config;\n\n/** Optional parameters. */\nexport interface UpdateConfigOptionalParams\n  extends coreClient.OperationOptions {\n  body?: UpdateConfig;\n}\n\n/** Contains response data for the updateConfig operation. */\nexport type UpdateConfigResponse = Config;\n\n/** Optional parameters. */\nexport interface DeleteConfigOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface GetConfigTemplateByKeyOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getConfigTemplateByKey operation. */\nexport type GetConfigTemplateByKeyResponse = ConfigTemplate;\n\n/** Optional parameters. */\nexport interface CreateConfigTemplateOptionalParams\n  extends coreClient.OperationOptions {\n  body?: CreateConfigTemplate;\n}\n\n/** Contains response data for the createConfigTemplate operation. */\nexport type CreateConfigTemplateResponse = ConfigTemplate;\n\n/** Optional parameters. */\nexport interface GetConfigTemplateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getConfigTemplate operation. */\nexport type GetConfigTemplateResponse = ConfigTemplate;\n\n/** Optional parameters. */\nexport interface UpdateConfigTemplateOptionalParams\n  extends coreClient.OperationOptions {\n  body?: UpdateConfigTemplate;\n}\n\n/** Contains response data for the updateConfigTemplate operation. */\nexport type UpdateConfigTemplateResponse = ConfigTemplate;\n\n/** Optional parameters. */\nexport interface DeleteConfigTemplateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface CreateConfigGroupOptionalParams\n  extends coreClient.OperationOptions {\n  body?: CreateConfigGroup;\n}\n\n/** Contains response data for the createConfigGroup operation. */\nexport type CreateConfigGroupResponse = ConfigGroup;\n\n/** Optional parameters. */\nexport interface GetConfigGroupOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getConfigGroup operation. */\nexport type GetConfigGroupResponse = ConfigGroup;\n\n/** Optional parameters. */\nexport interface UpdateConfigGroupOptionalParams\n  extends coreClient.OperationOptions {\n  body?: UpdateConfigGroup;\n}\n\n/** Contains response data for the updateConfigGroup operation. */\nexport type UpdateConfigGroupResponse = ConfigGroup;\n\n/** Optional parameters. */\nexport interface DeleteConfigGroupOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface GetStorageTemporaryCredentialsOptionalParams\n  extends coreClient.OperationOptions {\n  /** 指定使用的云储存平台，可选值有：qcloud（腾讯云）、aliyun（阿里云）。如果未指定，使用默认平台。 */\n  provider?: StorageProvider;\n  /** 上传路径，可以为空 */\n  path?: string;\n}\n\n/** Contains response data for the getStorageTemporaryCredentials operation. */\nexport type GetStorageTemporaryCredentialsResponse = StorageTemporaryCredentials;\n\n/** Optional parameters. */\nexport interface XapiServiceOptionalParams\n  extends coreClient.ServiceClientOptions {\n  /** server parameter */\n  $host?: string;\n  /** Overrides client endpoint. */\n  endpoint?: string;\n}\n","import * as coreClient from \"@azure/core-client\";\n\nexport const Config: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Config\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      resourceId: {\n        serializedName: \"resource_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      groupId: {\n        serializedName: \"group_id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      templateId: {\n        serializedName: \"template_id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      key: {\n        serializedName: \"key\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      value: {\n        serializedName: \"value\",\n        required: true,\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      },\n      createdAt: {\n        serializedName: \"created_at\",\n        required: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      updatedAt: {\n        serializedName: \"updated_at\",\n        type: {\n          name: \"DateTime\"\n        }\n      }\n    }\n  }\n};\n\nexport const ErrorModel: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ErrorModel\",\n    modelProperties: {\n      code: {\n        serializedName: \"code\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      message: {\n        serializedName: \"message\",\n        type: {\n          name: \"String\"\n        }\n      },\n      param: {\n        serializedName: \"param\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CreateConfig: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CreateConfig\",\n    modelProperties: {\n      resourceId: {\n        serializedName: \"resource_id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      groupId: {\n        serializedName: \"group_id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      templateId: {\n        serializedName: \"template_id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      key: {\n        serializedName: \"key\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      value: {\n        serializedName: \"value\",\n        required: true,\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const UpdateConfig: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"UpdateConfig\",\n    modelProperties: {\n      resourceId: {\n        serializedName: \"resource_id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      groupId: {\n        serializedName: \"group_id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      templateId: {\n        serializedName: \"template_id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      key: {\n        serializedName: \"key\",\n        type: {\n          name: \"String\"\n        }\n      },\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const ConfigTemplate: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ConfigTemplate\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      groupId: {\n        serializedName: \"group_id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      key: {\n        serializedName: \"key\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      value: {\n        serializedName: \"value\",\n        required: true,\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      },\n      createdAt: {\n        serializedName: \"created_at\",\n        required: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      updatedAt: {\n        serializedName: \"updated_at\",\n        type: {\n          name: \"DateTime\"\n        }\n      }\n    }\n  }\n};\n\nexport const CreateConfigTemplate: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CreateConfigTemplate\",\n    modelProperties: {\n      groupId: {\n        serializedName: \"group_id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      key: {\n        serializedName: \"key\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      value: {\n        serializedName: \"value\",\n        required: true,\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const UpdateConfigTemplate: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"UpdateConfigTemplate\",\n    modelProperties: {\n      groupId: {\n        serializedName: \"group_id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      key: {\n        serializedName: \"key\",\n        type: {\n          name: \"String\"\n        }\n      },\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const CreateConfigGroup: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CreateConfigGroup\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ConfigGroup: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ConfigGroup\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      createdAt: {\n        serializedName: \"created_at\",\n        required: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      updatedAt: {\n        serializedName: \"updated_at\",\n        type: {\n          name: \"DateTime\"\n        }\n      }\n    }\n  }\n};\n\nexport const UpdateConfigGroup: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"UpdateConfigGroup\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const StorageTemporaryCredentials: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"StorageTemporaryCredentials\",\n    modelProperties: {\n      provider: {\n        serializedName: \"provider\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      bucket: {\n        serializedName: \"bucket\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      region: {\n        serializedName: \"region\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      cdn: {\n        serializedName: \"cdn\",\n        type: {\n          name: \"String\"\n        }\n      },\n      url: {\n        serializedName: \"url\",\n        type: {\n          name: \"String\"\n        }\n      },\n      credentials: {\n        serializedName: \"credentials\",\n        required: true,\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"any\" } }\n        }\n      }\n    }\n  }\n};\n","import {\n  OperationParameter,\n  OperationURLParameter,\n  OperationQueryParameter\n} from \"@azure/core-client\";\nimport {\n  CreateConfig as CreateConfigMapper,\n  UpdateConfig as UpdateConfigMapper,\n  CreateConfigTemplate as CreateConfigTemplateMapper,\n  UpdateConfigTemplate as UpdateConfigTemplateMapper,\n  CreateConfigGroup as CreateConfigGroupMapper,\n  UpdateConfigGroup as UpdateConfigGroupMapper\n} from \"../models/mappers\";\n\nexport const accept: OperationParameter = {\n  parameterPath: \"accept\",\n  mapper: {\n    defaultValue: \"application/json\",\n    isConstant: true,\n    serializedName: \"Accept\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const $host: OperationURLParameter = {\n  parameterPath: \"$host\",\n  mapper: {\n    serializedName: \"$host\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\n\nexport const resourceId: OperationQueryParameter = {\n  parameterPath: \"resourceId\",\n  mapper: {\n    serializedName: \"resource_id\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const key: OperationQueryParameter = {\n  parameterPath: \"key\",\n  mapper: {\n    serializedName: \"key\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const contentType: OperationParameter = {\n  parameterPath: [\"options\", \"contentType\"],\n  mapper: {\n    defaultValue: \"application/json\",\n    isConstant: true,\n    serializedName: \"Content-Type\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const body: OperationParameter = {\n  parameterPath: [\"options\", \"body\"],\n  mapper: CreateConfigMapper\n};\n\nexport const id: OperationURLParameter = {\n  parameterPath: \"id\",\n  mapper: {\n    serializedName: \"id\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const body1: OperationParameter = {\n  parameterPath: [\"options\", \"body\"],\n  mapper: UpdateConfigMapper\n};\n\nexport const body2: OperationParameter = {\n  parameterPath: [\"options\", \"body\"],\n  mapper: CreateConfigTemplateMapper\n};\n\nexport const body3: OperationParameter = {\n  parameterPath: [\"options\", \"body\"],\n  mapper: UpdateConfigTemplateMapper\n};\n\nexport const body4: OperationParameter = {\n  parameterPath: [\"options\", \"body\"],\n  mapper: CreateConfigGroupMapper\n};\n\nexport const body5: OperationParameter = {\n  parameterPath: [\"options\", \"body\"],\n  mapper: UpdateConfigGroupMapper\n};\n\nexport const provider: OperationQueryParameter = {\n  parameterPath: [\"options\", \"provider\"],\n  mapper: {\n    serializedName: \"provider\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const path: OperationQueryParameter = {\n  parameterPath: [\"options\", \"path\"],\n  mapper: {\n    serializedName: \"path\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n","import * as coreClient from \"@azure/core-client\";\nimport * as coreRestPipeline from \"@azure/core-rest-pipeline\";\nimport * as coreAuth from \"@azure/core-auth\";\nimport * as Parameters from \"./models/parameters\";\nimport * as Mappers from \"./models/mappers\";\nimport {\n  XapiServiceOptionalParams,\n  GetConfigByKeyOptionalParams,\n  GetConfigByKeyResponse,\n  CreateConfigOptionalParams,\n  CreateConfigResponse,\n  GetConfigOptionalParams,\n  GetConfigResponse,\n  UpdateConfigOptionalParams,\n  UpdateConfigResponse,\n  DeleteConfigOptionalParams,\n  GetConfigTemplateByKeyOptionalParams,\n  GetConfigTemplateByKeyResponse,\n  CreateConfigTemplateOptionalParams,\n  CreateConfigTemplateResponse,\n  GetConfigTemplateOptionalParams,\n  GetConfigTemplateResponse,\n  UpdateConfigTemplateOptionalParams,\n  UpdateConfigTemplateResponse,\n  DeleteConfigTemplateOptionalParams,\n  CreateConfigGroupOptionalParams,\n  CreateConfigGroupResponse,\n  GetConfigGroupOptionalParams,\n  GetConfigGroupResponse,\n  UpdateConfigGroupOptionalParams,\n  UpdateConfigGroupResponse,\n  DeleteConfigGroupOptionalParams,\n  GetStorageTemporaryCredentialsOptionalParams,\n  GetStorageTemporaryCredentialsResponse\n} from \"./models\";\n\nexport class XapiService extends coreClient.ServiceClient {\n  $host: string;\n\n  /**\n   * Initializes a new instance of the XapiService class.\n   * @param credentials Subscription credentials which uniquely identify client subscription.\n   * @param options The parameter options\n   */\n  constructor(\n    credentials: coreAuth.TokenCredential,\n    options?: XapiServiceOptionalParams\n  ) {\n    if (credentials === undefined) {\n      throw new Error(\"'credentials' cannot be null\");\n    }\n\n    // Initializing default values for options\n    if (!options) {\n      options = {};\n    }\n    const defaults: XapiServiceOptionalParams = {\n      requestContentType: \"application/json; charset=utf-8\",\n      credential: credentials\n    };\n\n    const packageDetails = `azsdk-js-xapis/0.0.3`;\n    const userAgentPrefix =\n      options.userAgentOptions && options.userAgentOptions.userAgentPrefix\n        ? `${options.userAgentOptions.userAgentPrefix} ${packageDetails}`\n        : `${packageDetails}`;\n\n    const optionsWithDefaults = {\n      ...defaults,\n      ...options,\n      userAgentOptions: {\n        userAgentPrefix\n      },\n      baseUri:\n        options.endpoint ?? options.baseUri ?? \"https://api.growingbox.cn\"\n    };\n    super(optionsWithDefaults);\n\n    let bearerTokenAuthenticationPolicyFound: boolean = false;\n    if (options?.pipeline && options.pipeline.getOrderedPolicies().length > 0) {\n      const pipelinePolicies: coreRestPipeline.PipelinePolicy[] = options.pipeline.getOrderedPolicies();\n      bearerTokenAuthenticationPolicyFound = pipelinePolicies.some(\n        (pipelinePolicy) =>\n          pipelinePolicy.name ===\n          coreRestPipeline.bearerTokenAuthenticationPolicyName\n      );\n    }\n    if (\n      !options ||\n      !options.pipeline ||\n      options.pipeline.getOrderedPolicies().length == 0 ||\n      !bearerTokenAuthenticationPolicyFound\n    ) {\n      this.pipeline.removePolicy({\n        name: coreRestPipeline.bearerTokenAuthenticationPolicyName\n      });\n      this.pipeline.addPolicy(\n        coreRestPipeline.bearerTokenAuthenticationPolicy({\n          credential: credentials,\n          scopes: `${optionsWithDefaults.credentialScopes}`,\n          challengeCallbacks: {\n            authorizeRequestOnChallenge:\n              coreClient.authorizeRequestOnClaimChallenge\n          }\n        })\n      );\n    }\n\n    // Assigning values to Constant parameters\n    this.$host = options.$host || \"https://api.growingbox.cn\";\n  }\n\n  /**\n   * 根据配置项查询配置\n   * @param resourceId 配置所属的资源ID\n   * @param key 配置项\n   * @param options The options parameters.\n   */\n  getConfigByKey(\n    resourceId: string,\n    key: string,\n    options?: GetConfigByKeyOptionalParams\n  ): Promise<GetConfigByKeyResponse> {\n    return this.sendOperationRequest(\n      { resourceId, key, options },\n      getConfigByKeyOperationSpec\n    );\n  }\n\n  /**\n   * 创建配置\n   * @param options The options parameters.\n   */\n  createConfig(\n    options?: CreateConfigOptionalParams\n  ): Promise<CreateConfigResponse> {\n    return this.sendOperationRequest({ options }, createConfigOperationSpec);\n  }\n\n  /**\n   * 查询配置\n   * @param id 配置ID\n   * @param options The options parameters.\n   */\n  getConfig(\n    id: string,\n    options?: GetConfigOptionalParams\n  ): Promise<GetConfigResponse> {\n    return this.sendOperationRequest({ id, options }, getConfigOperationSpec);\n  }\n\n  /**\n   * 更新配置\n   * @param id 配置ID\n   * @param options The options parameters.\n   */\n  updateConfig(\n    id: string,\n    options?: UpdateConfigOptionalParams\n  ): Promise<UpdateConfigResponse> {\n    return this.sendOperationRequest(\n      { id, options },\n      updateConfigOperationSpec\n    );\n  }\n\n  /**\n   * 删除配置\n   * @param id 配置ID\n   * @param options The options parameters.\n   */\n  deleteConfig(\n    id: string,\n    options?: DeleteConfigOptionalParams\n  ): Promise<void> {\n    return this.sendOperationRequest(\n      { id, options },\n      deleteConfigOperationSpec\n    );\n  }\n\n  /**\n   * 根据配置项查询配置模版\n   * @param key 配置项\n   * @param options The options parameters.\n   */\n  getConfigTemplateByKey(\n    key: string,\n    options?: GetConfigTemplateByKeyOptionalParams\n  ): Promise<GetConfigTemplateByKeyResponse> {\n    return this.sendOperationRequest(\n      { key, options },\n      getConfigTemplateByKeyOperationSpec\n    );\n  }\n\n  /**\n   * 创建配置模版\n   * @param options The options parameters.\n   */\n  createConfigTemplate(\n    options?: CreateConfigTemplateOptionalParams\n  ): Promise<CreateConfigTemplateResponse> {\n    return this.sendOperationRequest(\n      { options },\n      createConfigTemplateOperationSpec\n    );\n  }\n\n  /**\n   * 查询配置模板\n   * @param id 配置模板ID\n   * @param options The options parameters.\n   */\n  getConfigTemplate(\n    id: string,\n    options?: GetConfigTemplateOptionalParams\n  ): Promise<GetConfigTemplateResponse> {\n    return this.sendOperationRequest(\n      { id, options },\n      getConfigTemplateOperationSpec\n    );\n  }\n\n  /**\n   * 更新配置模板\n   * @param id 配置模板ID\n   * @param options The options parameters.\n   */\n  updateConfigTemplate(\n    id: string,\n    options?: UpdateConfigTemplateOptionalParams\n  ): Promise<UpdateConfigTemplateResponse> {\n    return this.sendOperationRequest(\n      { id, options },\n      updateConfigTemplateOperationSpec\n    );\n  }\n\n  /**\n   * 删除配置模板\n   * @param id 配置模板ID\n   * @param options The options parameters.\n   */\n  deleteConfigTemplate(\n    id: string,\n    options?: DeleteConfigTemplateOptionalParams\n  ): Promise<void> {\n    return this.sendOperationRequest(\n      { id, options },\n      deleteConfigTemplateOperationSpec\n    );\n  }\n\n  /**\n   * 创建配置组\n   * @param options The options parameters.\n   */\n  createConfigGroup(\n    options?: CreateConfigGroupOptionalParams\n  ): Promise<CreateConfigGroupResponse> {\n    return this.sendOperationRequest(\n      { options },\n      createConfigGroupOperationSpec\n    );\n  }\n\n  /**\n   * 查询配置组\n   * @param id 配置组ID\n   * @param options The options parameters.\n   */\n  getConfigGroup(\n    id: string,\n    options?: GetConfigGroupOptionalParams\n  ): Promise<GetConfigGroupResponse> {\n    return this.sendOperationRequest(\n      { id, options },\n      getConfigGroupOperationSpec\n    );\n  }\n\n  /**\n   * 更新配置组\n   * @param id 配置组ID\n   * @param options The options parameters.\n   */\n  updateConfigGroup(\n    id: string,\n    options?: UpdateConfigGroupOptionalParams\n  ): Promise<UpdateConfigGroupResponse> {\n    return this.sendOperationRequest(\n      { id, options },\n      updateConfigGroupOperationSpec\n    );\n  }\n\n  /**\n   * 删除配置组\n   * @param id 配置组ID\n   * @param options The options parameters.\n   */\n  deleteConfigGroup(\n    id: string,\n    options?: DeleteConfigGroupOptionalParams\n  ): Promise<void> {\n    return this.sendOperationRequest(\n      { id, options },\n      deleteConfigGroupOperationSpec\n    );\n  }\n\n  /**\n   * 获取上传文件临时凭证\n   * @param options The options parameters.\n   */\n  getStorageTemporaryCredentials(\n    options?: GetStorageTemporaryCredentialsOptionalParams\n  ): Promise<GetStorageTemporaryCredentialsResponse> {\n    return this.sendOperationRequest(\n      { options },\n      getStorageTemporaryCredentialsOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getConfigByKeyOperationSpec: coreClient.OperationSpec = {\n  path: \"/config/v1/configs\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Config\n    },\n    default: {\n      bodyMapper: Mappers.ErrorModel\n    }\n  },\n  queryParameters: [Parameters.resourceId, Parameters.key],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createConfigOperationSpec: coreClient.OperationSpec = {\n  path: \"/config/v1/configs\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Config\n    },\n    default: {\n      bodyMapper: Mappers.ErrorModel\n    }\n  },\n  requestBody: Parameters.body,\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst getConfigOperationSpec: coreClient.OperationSpec = {\n  path: \"/config/v1/configs/{id}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Config\n    },\n    default: {\n      bodyMapper: Mappers.ErrorModel\n    }\n  },\n  urlParameters: [Parameters.$host, Parameters.id],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst updateConfigOperationSpec: coreClient.OperationSpec = {\n  path: \"/config/v1/configs/{id}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Config\n    },\n    default: {\n      bodyMapper: Mappers.ErrorModel\n    }\n  },\n  requestBody: Parameters.body1,\n  urlParameters: [Parameters.$host, Parameters.id],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteConfigOperationSpec: coreClient.OperationSpec = {\n  path: \"/config/v1/configs/{id}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    default: {\n      bodyMapper: Mappers.ErrorModel\n    }\n  },\n  urlParameters: [Parameters.$host, Parameters.id],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getConfigTemplateByKeyOperationSpec: coreClient.OperationSpec = {\n  path: \"/config/v1/config_templates\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ConfigTemplate\n    },\n    default: {\n      bodyMapper: Mappers.ErrorModel\n    }\n  },\n  queryParameters: [Parameters.key],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createConfigTemplateOperationSpec: coreClient.OperationSpec = {\n  path: \"/config/v1/config_templates\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ConfigTemplate\n    },\n    default: {\n      bodyMapper: Mappers.ErrorModel\n    }\n  },\n  requestBody: Parameters.body2,\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst getConfigTemplateOperationSpec: coreClient.OperationSpec = {\n  path: \"/config/v1/config_templates/{id}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ConfigTemplate\n    },\n    default: {\n      bodyMapper: Mappers.ErrorModel\n    }\n  },\n  urlParameters: [Parameters.$host, Parameters.id],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst updateConfigTemplateOperationSpec: coreClient.OperationSpec = {\n  path: \"/config/v1/config_templates/{id}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ConfigTemplate\n    },\n    default: {\n      bodyMapper: Mappers.ErrorModel\n    }\n  },\n  requestBody: Parameters.body3,\n  urlParameters: [Parameters.$host, Parameters.id],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteConfigTemplateOperationSpec: coreClient.OperationSpec = {\n  path: \"/config/v1/config_templates/{id}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    default: {\n      bodyMapper: Mappers.ErrorModel\n    }\n  },\n  urlParameters: [Parameters.$host, Parameters.id],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createConfigGroupOperationSpec: coreClient.OperationSpec = {\n  path: \"/config/v1/config_groups\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ConfigGroup\n    },\n    default: {\n      bodyMapper: Mappers.ErrorModel\n    }\n  },\n  requestBody: Parameters.body4,\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst getConfigGroupOperationSpec: coreClient.OperationSpec = {\n  path: \"/config/v1/config_groups/{id}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ConfigGroup\n    },\n    default: {\n      bodyMapper: Mappers.ErrorModel\n    }\n  },\n  urlParameters: [Parameters.$host, Parameters.id],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst updateConfigGroupOperationSpec: coreClient.OperationSpec = {\n  path: \"/config/v1/config_groups/{id}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ConfigGroup\n    },\n    default: {\n      bodyMapper: Mappers.ErrorModel\n    }\n  },\n  requestBody: Parameters.body5,\n  urlParameters: [Parameters.$host, Parameters.id],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteConfigGroupOperationSpec: coreClient.OperationSpec = {\n  path: \"/config/v1/config_groups/{id}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    200: {},\n    default: {\n      bodyMapper: Mappers.ErrorModel\n    }\n  },\n  urlParameters: [Parameters.$host, Parameters.id],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getStorageTemporaryCredentialsOperationSpec: coreClient.OperationSpec = {\n  path: \"/storage/v1/temporary_credentials\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.StorageTemporaryCredentials\n    },\n    default: {\n      bodyMapper: Mappers.ErrorModel\n    }\n  },\n  queryParameters: [Parameters.provider, Parameters.path],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n"],"names":["KnownStorageProvider","CreateConfigMapper","UpdateConfigMapper","CreateConfigTemplateMapper","UpdateConfigTemplateMapper","CreateConfigGroupMapper","UpdateConfigGroupMapper","coreClient","coreRestPipeline","Mappers.Config","Mappers.ErrorModel","Parameters.resourceId","Parameters.key","Parameters.$host","Parameters.accept","Parameters.body","Parameters.contentType","Parameters.id","Parameters.body1","Mappers.ConfigTemplate","Parameters.body2","Parameters.body3","Mappers.ConfigGroup","Parameters.body4","Parameters.body5","Mappers.StorageTemporaryCredentials","Parameters.provider","Parameters.path"],"mappings":"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"}